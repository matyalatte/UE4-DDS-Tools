name: build

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
  
env:
  ZIP_NAME: UE4-DDS-Tools
  GUI_VERSION: v0.2.1
  PYTHON_VERSION: 3.9.12

jobs:
  build:
    runs-on: windows-2022
    steps:
    
      - name: Check tag
        run: |
          if [[ ${{ github.ref }} == refs/tags/v* ]]; then
            VERSION=-$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          else
            VERSION=""
          fi
          echo "REPO_VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash
        
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Download embeddable python
        run: |
          mkdir -p ../release/python
          curl -OL https://www.python.org/ftp/python/${{env.PYTHON_VERSION}}/python-${{env.PYTHON_VERSION}}-embed-amd64.zip
          unzip -d python-${{env.PYTHON_VERSION}}-embed-amd64 python-${{env.PYTHON_VERSION}}-embed-amd64.zip
          cd python-${{env.PYTHON_VERSION}}-embed-amd64
          cp python.exe ../../release/python
          cp python39.dll ../../release/python
          cp python39.zip ../../release/python
          cp libffi-7.dll ../../release/python
          cp _ctypes.pyd ../../release/python
          cp LICENSE.txt ../../release/python
        shell: bash

      - name: Download Simple Command Runner
        run: |
          curl -OL https://github.com/matyalatte/Simple-Command-Runner/releases/download/${{env.GUI_VERSION}}/SimpleCommandRunner-${{env.GUI_VERSION}}-${{ runner.os }}.zip
          unzip -d SimpleCommandRunner SimpleCommandRunner-${{env.GUI_VERSION}}-${{ runner.os }}.zip
          cp SimpleCommandRunner/SimpleCommandRunner.exe ../release/GUI.exe
          cp gui_definition.json ../release
        shell: bash

      - name: build dll
        run: |
          external/Texconv-Custom-DLL/batch_files/build_wic_support.bat
          mkdir -p ../release/src/directx
          cp external/Texconv-Custom-DLL/texconv.dll ../release/src/directx

      - name: Copy files
        run: |
          cp -r src ../release
          cp bat/_check* ../release
          cp changelog.txt ../release
          cp README.md ../release
          cp LICENSE ../release
        shell: bash

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          directory: '../release'
          type: 'zip'
          filename: '${{ env.ZIP_NAME }}.zip'
          exclusions: '*.git* .gitignore'
          
      - name: Create Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Changelog
            - First Change
            - Second Change
          draft: true
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset-python
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ../release/${{ env.ZIP_NAME }}.zip
          asset_name: ${{ env.ZIP_NAME }}${{ env.REPO_VERSION }}.zip
          asset_content_type: application/zip
